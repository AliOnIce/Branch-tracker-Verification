{"version":3,"sources":["redux/actions/types.js","helpers/setAuthorizationToken.js","redux/actions/authAction.js","helpers/localStorage.js","components/loginForm/LoginForm.js","components/navbarComponent/NavbarComponent.js","components/sidebarComponent/SidebarComponent.js","components/panelHeader/PanelHeader.js","components/userPanel/dailyBranchSalesComponent/branchInputsComponent/BranchInputsComponent.js","components/spinner/CenteredSpinner.js","redux/actions/dailySaleActions.js","components/userPanel/UserPanel.js","components/userPanel/dailyBranchSalesComponent/DailyBranchSalesComponent.js","redux/actions/usersActions.js","components/controlPanel/dailySalesInDay.js","redux/actions/dailySaleAdminActions.js","components/controlPanel/controlPanelMain/ControlPanelMain.js","components/controlPanel/usersComponent/AddUserComponent.js","components/controlPanel/usersComponent/AddBranchComponent.js","components/controlPanel/ControlPanel.js","components/controlPanel/usersComponent/UsersComponent.js","App.js","components/errorPage/ErrorPage.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/usersReducer.js","redux/reducers/dailySaleReducer.js","redux/reducers/dailySaleAdminReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js","components/loginForm/LoginForm.module.css"],"names":["LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT","FETCH_USERS_PENDING","FETCH_USERS_FULFILLED","FETCH_USERS_REJECT","PUT_USER_PENDING","PUT_USER_FULFILLED","PUT_USER_REJECT","FETCH_DAILY_SALE_PENDING","FETCH_DAILY_SALE_FULFILLED","FETCH_DAILY_SALE_REJECT","CHANGE_DAILY_SALE_BRANCH_DATA","PUT_DAILY_SALE_FULFILLED","PUT_DAILY_SALE_REJECT","FETCH_ALL_DAILY_SALE_PENDING","FETCH_ALL_DAILY_SALE_FULFILLED","FETCH_ALL_DAILY_SALE_REJECT","setAuthorizationToken","token","axios","defaults","headers","common","loginError","error","type","login","username","password","dispatch","post","then","res","data","state","serializedState","JSON","stringify","localStorage","setItem","saveState","user","jwtDecode","loginSuccess","catch","err","response","message","LoginForm","props","useSelector","auth","errorMessage","useDispatch","useForm","register","errors","handleSubmit","useEffect","usertype","history","push","className","styles","cont","form_sign_in","onSubmit","values","Alert","color","FormGroup","name","placeholder","ref","required","validate","value","length","NavbarComponent","useState","dropdownOpen","setDropdownOpen","Navbar","light","expand","NavbarBrand","href","NavbarToggler","onClick","toggle","Collapse","navbar","Dropdown","isOpen","prevState","DropdownToggle","caret","nameSurname","DropdownMenu","DropdownItem","header","removeItem","SidebarComponent","id","pages","map","p","index","to","path","text","PanelHeader","head","child","BranchInputsComponent","branch","branchName","totalSale","min","defaultValue","step","onChange","e","payload","propName","target","CenteredSpinner","Spinner","style","width","height","dailySaleLoading","fetchDailySaleError","fillDailySale","date","get","moment","format","dailySale","putDailySaleError","putDailySale","put","exact","component","loading","okMessage","Date","preventDefault","scope","salesByBranches","colSpan","Button","UserPanel","useRouteMatch","setIsOpen","role","fetchUsers","fetchUsersError","fillUsers","users","putUserPending","putUserError","DailySalesInDay","dailySaleState","dailySaleAdmin","usersState","missingUsers","setMissingUsers","dailySales","dsIDs","ds","userID","filter","u","indexOf","_id","total","setTotal","tot","forEach","branchSale","regionName","branchNo","mu","branches","br","ControlPanelMain","selectedDate","setSelectedDate","datepicker","selected","dateFormat","AddUserComponent","formState","setFormState","handleChange","oldState","body","console","log","AddBranchComponent","setBranchNo","setBranchName","event","deleteBranchAction","userId","branchId","branchID","delete","deleteUserAction","deleteUser","isPublic","App","Boolean","window","location","hostname","match","initState","undefined","authReducer","action","initialState","updateLoading","updateError","usersReducer","dailySaleReducer","current","dailySaleAdminReducer","rootReducer","combineReducers","loggerMiddleware","createLogger","persistedState","getItem","parse","loadState","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ea3a93e7.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGOUT = \"LOGOUT\";\n\n//users\nexport const FETCH_USERS_PENDING = \"FETCH_USERS_PENDING\";\nexport const FETCH_USERS_FULFILLED = \"FETCH_USERS_FULFILLED\";\nexport const FETCH_USERS_REJECT = \"FETCH_USERS_REJECT\";\n\nexport const PUT_USER_PENDING = \"FETCH_USERS_REJECT\";\nexport const PUT_USER_FULFILLED = \"FETCH_USERS_FULFILLED\";\nexport const PUT_USER_REJECT = \"FETCH_USERS_PENDING\";\n\n//dailySale\n\nexport const FETCH_DAILY_SALE_PENDING = \"FETCH_DAILY_SALE_PENDING\";\nexport const FETCH_DAILY_SALE_FULFILLED = \"FETCH_DAILY_SALE_FULFILLED\";\nexport const FETCH_DAILY_SALE_REJECT = \"FETCH_DAILY_SALE_REJECT\";\nexport const CHANGE_DAILY_SALE_BRANCH_DATA = \"CHANGE_DAILY_SALE_BRANCH_DATA\";\nexport const PUT_DAILY_SALE_FULFILLED = \"PUT_DAILY_SALE_FULFILLED\";\nexport const PUT_DAILY_SALE_REJECT = \"PUT_DAILY_SALE_REJECT\";\n\n//admin daily sale\nexport const FETCH_ALL_DAILY_SALE_PENDING = \"FETCH_ALL_DAILY_SALE_PENDING\";\nexport const FETCH_ALL_DAILY_SALE_FULFILLED = \"FETCH_ALL_DAILY_SALE_FULFILLED\";\nexport const FETCH_ALL_DAILY_SALE_REJECT = \"FETCH_ALL_DAILY_SALE_REJECT\";\n\n\nexport const FETCH_ALL_DAILY_SALE_RANGE_PENDING = \"FETCH_ALL_DAILY_SALE_RANGE_PENDING\";\nexport const FETCH_ALL_DAILY_SALE_RANGE_FULFILLED = \"FETCH_ALL_DAILY_SALE_RANGE_FULFILLED\";\nexport const FETCH_ALL_DAILY_SALE_RANGE_REJECT = \"FETCH_ALL_DAILY_SALE_RANGE_REJECT\";","import axios from 'axios';\n\nexport const setAuthorizationToken = token => {\n    if (token)\n        axios.defaults.headers.common[\"x-auth-token\"] = token;\n    else\n        delete axios.defaults.headers.common[\"Authorization\"];\n}","import {LOGIN_ERROR, LOGIN_SUCCESS, LOGOUT} from \"./types\";\nimport axios from \"axios\";\nimport {setAuthorizationToken} from \"../../helpers/setAuthorizationToken\";\nimport jwtDecode from \"jwt-decode\";\nimport {saveState} from \"../../helpers/localStorage\";\n\nconst loginSuccess = (user, token) => {\n    return {\n        type: LOGIN_SUCCESS,\n        user,\n        token\n    };\n};\n\nconst loginError = error => {\n    return {\n        type: LOGIN_ERROR,\n        error\n    };\n};\n\nexport const login = (username, password) => {\n    return dispatch => {\n        axios.post(\"/user/login\", {username, password})\n            .then(res => {\n                const {token} = res.data;\n                setAuthorizationToken(token);\n                saveState({\n                    token:token\n                });\n                let user = jwtDecode(token);\n                dispatch(loginSuccess(user, token));\n            })\n            .catch(err => {\n                if (err.response) {\n                    let {message} = err.response.data;\n                    if (message)\n                        dispatch(loginError(message));\n                } else {\n                    dispatch(loginError(\"Please report to admin!\"));\n                }\n\n            });\n    }\n}\n\nexport const logout = () => {\n    setAuthorizationToken(false);\n    localStorage.removeItem(\"state\");\n    return {\n        type: LOGOUT\n    };\n}","\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch {\n        // ignore write errors\n    }\n};\n\nexport const deleteState = () => {\n\n}","import React, {useEffect} from 'react';\nimport {useForm} from \"react-hook-form\";\nimport {Alert, FormGroup} from \"reactstrap\";\nimport {login} from \"../../redux/actions/authAction\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport styles from './LoginForm.module.css';\n\n\nconst LoginForm = (props) => {\n    const {user, token, error, errorMessage} = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    const {register, errors, handleSubmit} = useForm();\n\n    const handleSubmitAction = values => {\n        const {username, password} = values;\n        if (username && password)\n            dispatch(login(username, password));\n    }\n\n    useEffect(() => {\n        if (token) {\n            if (user.usertype > 0) {\n                props.history.push(\"/userPanel\");\n            } else {\n                props.history.push(\"/controlPanel\");\n            }\n        }\n    }, [token, props.history, user.usertype]);\n\n    return <>\n        <div className={styles.cont}>\n\n            <form className={styles.form_sign_in} onSubmit={handleSubmit(handleSubmitAction)}>\n                <div className=\"text-center mb-4\">\n                    <h1 className=\"h3 mb-3 font-weight-normal\">Branch Tracker</h1>\n                    {error && <Alert color=\"danger\"> {errorMessage} </Alert>}\n                </div>\n                <FormGroup>\n                    <input type=\"text\" name=\"username\" placeholder=\"Kullanıcı Adı\"\n                           className={`form-control ${errors.username ? \"is-invalid\" : \"\"}`}\n                           ref={register({required: true, validate: value => value.length > 3})}/>\n                </FormGroup>\n                <FormGroup>\n                    <input type=\"password\" name=\"password\" placeholder=\"Şifre\"\n                           className={`form-control ${errors.password ? \"is-invalid\" : \"\"}`}\n                           ref={register({required: true, validate: value => value.length > 3})}/>\n                </FormGroup>\n                <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">Giriş Yap</button>\n            </form>\n        </div>\n    </>\n\n};\n\nexport default LoginForm;","import React, {useState} from 'react';\nimport {\n    Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand\n} from 'reactstrap';\nimport {logout} from \"../../redux/actions/authAction\";\nimport \"./NavbarComponent.css\";\n\n\nconst NavbarComponent = (props) => {\n\n    const handleLogout = () => {\n        props.dispatch(logout());\n        props.history.push('/');\n    };\n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const dropdownToggle = () => setDropdownOpen(prevState => !prevState);\n\n    return <>\n        <Navbar className=\"navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\" color=\"light\" light expand=\"md\">\n            <NavbarBrand className=\"col-md-2 col-lg-2 mr-0 px-3\" href=\"/\">Branch Tracker</NavbarBrand>\n            <NavbarToggler className=\"ml-2 w-25\" onClick={props.toggle} />\n            <Collapse navbar/>\n            <ul className=\"navbar-nav m-2\">\n                <li className=\"nav-item text-nowrap\">\n                    <Dropdown isOpen={dropdownOpen} toggle={dropdownToggle}>\n                        <DropdownToggle caret>\n                            {props.user.nameSurname}\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            <DropdownItem header>Kullanıcı Menü</DropdownItem>\n                            <DropdownItem onClick={handleLogout}>Çıkış Yap</DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                </li>\n            </ul>\n        </Navbar>\n    </>\n};\n\n\nexport default NavbarComponent;","import React from 'react';\nimport \"./SidebarComponent.css\";\nimport {Collapse} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst SidebarComponent = (props) => {\n    return <>\n        <Collapse isOpen={props.isOpen} id=\"sidebarMenu\" className=\"col-md-2 col-lg-2 d-md-block bg-light sidebar\">\n            <div className=\"sidebar-sticky\">\n                <ul className=\"nav flex-column\">\n                    {props.pages.map((p, index) => {\n                        return <li key={index}  className=\"nav-item\">\n                            <Link to={props.path+p.path} className=\"nav-link\">{p.text}</Link>\n                        </li>\n                    })}\n                </ul>\n            </div>\n        </Collapse>\n    </>\n};\n\nexport default SidebarComponent;\n","import React from 'react';\n\nconst PanelHeader = (props) => {\n    return <div\n        className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n        <h1 className=\"h2\">{props.head}</h1>\n        {props.child && <div className=\"btn-toolbar mb-2 mb-md-0\"> {props.child} </div>}\n    </div>\n\n};\n\nexport default PanelHeader;","import React from 'react';\nimport {CHANGE_DAILY_SALE_BRANCH_DATA} from \"../../../../redux/actions/types\";\n\nconst BranchInputsComponent = (props) => {\n\n    const {branchName, totalSale} = props.branch;\n\n    const handleChange = (e) => {\n        props.dispatch(\n            {\n                type: CHANGE_DAILY_SALE_BRANCH_DATA,\n                payload: {index: props.index, propName: e.target.name, value: +e.target.value}\n            }\n        )\n    }\n\n    return <>\n        <tr>\n            <td className=\"align-middle\">{branchName}</td>\n            <td className=\"align-middle\">\n                <input type=\"number\" className=\"form-control\" name=\"totalSale\"\n                       min={0}\n                       placeholder=\"Toplam Satış\"\n                       defaultValue={totalSale}\n                       step=\".001\"\n                       onChange={handleChange} required/>\n            </td>\n        </tr>\n    </>\n};\n\nexport default BranchInputsComponent;","import React from 'react';\nimport {Spinner} from \"reactstrap\";\n\nconst CenteredSpinner = () => {\n    return <>\n        <div className=\"d-flex justify-content-center\">\n            <Spinner style={{width:\"6rem\", height:\"6rem\"}} color=\"primary\"/>\n        </div>\n    </>\n};\n\nexport default CenteredSpinner;","import {\n    FETCH_DAILY_SALE_FULFILLED,\n    FETCH_DAILY_SALE_PENDING,\n    FETCH_DAILY_SALE_REJECT,\n    PUT_DAILY_SALE_FULFILLED,\n    PUT_DAILY_SALE_REJECT\n} from \"./types\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n\nconst dailySaleLoading = () => {\n    return {\n        type: FETCH_DAILY_SALE_PENDING\n    };\n};\n\nconst fetchDailySaleSuccess = dailySale => {\n    return {\n        type: FETCH_DAILY_SALE_FULFILLED,\n        payload: dailySale\n    };\n};\n\nconst fetchDailySaleError = error => {\n    return {\n        type: FETCH_DAILY_SALE_REJECT,\n        payload: error\n    };\n};\n\nexport const fillDailySale = (date) => {\n    return dispatch => {\n        dispatch(dailySaleLoading());\n        axios.get(`/dailySale/${moment(date).format(\"yyyy-MM-DD\")}`).then(res => {\n            dispatch(fetchDailySaleSuccess(res.data));\n        }).catch(error => {\n            if (error.response) {\n                let {message} = error.response.data;\n                if (message)\n                    dispatch(fetchDailySaleError(message));\n            } else {\n                dispatch(fetchDailySaleError(\"Please report admin!\"));\n            }\n        });\n    };\n};\n\nconst putDailySaleSuccess = message => {\n    return {\n        type: PUT_DAILY_SALE_FULFILLED,\n        payload: message\n    }\n}\n\nconst putDailySaleError = error => {\n    return {\n        type: PUT_DAILY_SALE_REJECT,\n        payload: error\n    }\n}\n\nexport const putDailySale = (dailySale) => {\n    return dispatch => {\n        dispatch(dailySaleLoading());\n        axios.put('/dailySale', dailySale).then(() => {\n            dispatch(putDailySaleSuccess(\"Başarı ile kayıt edildi\"));\n        }).catch(error => {\n            if (error.response) {\n                let {message} = error.response.data;\n                if (message)\n                    dispatch(putDailySaleError(message));\n            } else {\n                dispatch(putDailySaleError(\"Bir sorun oluştu daha sonra tekrar deneyiniz.\"));\n            }\n        });\n    };\n};\n","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Route, Switch, useRouteMatch} from \"react-router-dom\";\nimport NavbarComponent from \"../navbarComponent/NavbarComponent\";\nimport SidebarComponent from \"../sidebarComponent/SidebarComponent\";\nimport DailyBranchSalesComponent from \"./dailyBranchSalesComponent/DailyBranchSalesComponent\";\n\nconst pages = [\n    {\n        exact: true,\n        path: \"/\",\n        component: DailyBranchSalesComponent,\n        text:\"Ana Sayfa\"\n    },\n];\n\nconst UserPanel = (props) => {\n    const {user} = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n    const {path} = useRouteMatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return <>\n        <NavbarComponent history={props.history} dispatch={dispatch} toggle={toggle} user={user}/>\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <SidebarComponent isOpen={isOpen} pages={pages} path={path}/>\n\n                <main role=\"main\" className=\"col-md-10 ml-sm-auto col-lg-10 px-md-4\">\n                    <Switch>\n                        {pages.map((p, index) => {\n                            return <Route key={index} exact={p.exact} path={path + p.path} component={p.component}/>\n                        })}\n                    </Switch>\n                </main>\n            </div>\n        </div>\n    </>\n};\n\nexport default UserPanel;","import React, {useEffect} from 'react';\nimport PanelHeader from \"../../panelHeader/PanelHeader\";\nimport 'react-datepicker/dist/react-datepicker.min.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport BranchInputsComponent from \"./branchInputsComponent/BranchInputsComponent\";\nimport {Alert, Button} from \"reactstrap\";\nimport CenteredSpinner from \"../../spinner/CenteredSpinner\";\nimport {fillDailySale, putDailySale} from \"../../../redux/actions/dailySaleActions\";\n\nconst DailyBranchSalesComponent = () => {\n    const {loading, okMessage, error, dailySale} = useSelector(state => state.dailySale);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fillDailySale(new Date()));\n    }, [/*selectedDate*/dispatch]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(putDailySale(dailySale));\n    };\n\n    return <>\n        <PanelHeader head=\"Günlük Gelir Bildirisi\" />\n        {error && <Alert color=\"danger\" className=\"mt-2\"> {error} </Alert>}\n        {okMessage && <Alert color=\"success\" className=\"mt-2\"> {okMessage} </Alert>}\n\n        {loading ? <CenteredSpinner/> : <>\n            <form onSubmit={handleSubmit}>\n                <table className=\"table table-bordered\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Şube</th>\n                        <th scope=\"col\">Topam Satış</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {dailySale && dailySale.salesByBranches && dailySale.salesByBranches.map((branch, index) => {\n                        return <BranchInputsComponent index={index} key={index} branch={branch} dispatch={dispatch}/>\n                    })}\n                    <tr>\n                        <td colSpan=\"5\" className=\"text-center\">\n                            <Button color=\"primary\" type=\"submit\"> Kaydet</Button>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </form>\n        </>}\n\n\n    </>\n};\n\nexport default DailyBranchSalesComponent;","import {\n    FETCH_USERS_FULFILLED,\n    FETCH_USERS_PENDING,\n    FETCH_USERS_REJECT,\n    PUT_USER_PENDING,\n    PUT_USER_REJECT\n} from \"./types\";\nimport axios from \"axios\";\n\n\nconst fetchUsers = () => {\n    return {\n        type: FETCH_USERS_PENDING\n    };\n};\n\nconst fetchUsersSuccess = users => {\n    return {\n        type: FETCH_USERS_FULFILLED,\n        payload: users\n    };\n};\n\nconst fetchUsersError = error => {\n    return {\n        type: FETCH_USERS_REJECT,\n        payload: error\n    };\n};\n\nexport const fillUsers = () => {\n    return dispatch => {\n        dispatch(fetchUsers());\n        axios.get(\"/user/getAll\").then(res => {\n            dispatch(fetchUsersSuccess(res.data));\n        }).catch((error) => {\n            if (error.response) {\n                let {message} = error.response.data;\n                if (message)\n                    dispatch(fetchUsersError(message));\n            } else {\n                dispatch(fetchUsersError(\"Please report admin!\"));\n            }\n        });\n    };\n};\n\nexport const registerUser = (body) => { //nameSurname, username, password\n    return dispatch => {\n        console.log(body);\n        dispatch(fetchUsers());\n        axios.post(\"/user/register\", body).then(() => {\n            dispatch(fillUsers());\n        }).catch((error) => {\n            if (error.response) {\n                let {message} = error.response.data;\n                if (message)\n                    dispatch(fetchUsersError(message));\n            } else {\n                dispatch(fetchUsersError(\"Please report admin!\"));\n            }\n        });\n    };\n};\n\n\nconst putUserPending = (id) => {\n  return {\n      type: PUT_USER_PENDING,\n      payload:id\n  }\n};\n\n\nconst putUserError = (error) => {\n    return {\n        type: PUT_USER_REJECT,\n        payload:error\n    }\n};\n\nexport const updateUser = (user) => {\n    return dispatch => {\n        let id = user._id;\n        dispatch(putUserPending(id));\n        axios.put(`/user/update/${id}`, user).then(() => {\n            dispatch(fillUsers());\n        }).catch(error => {\n            if (error.response) {\n                let {message} = error.response.data;\n                if (message)\n                    dispatch(putUserError(message));\n            } else {\n                dispatch(putUserError(\"Please report admin!\"));\n            }\n        });\n    };\n};\n\nexport const updateUserBranches = (id, branches) => {\n    return dispatch => {\n        dispatch(putUserPending(id));\n        axios.put(`/user/update/${id}/branch`, branches).then(() => {\n            dispatch(fillUsers());\n        }).catch(error => {\n            if (error.response) {\n                let {message} = error.response.data;\n                if (message)\n                    dispatch(putUserError(message));\n            } else {\n                dispatch(putUserError(\"Please report admin!\"));\n            }\n        });\n    };\n};\n\nexport const deleteUser = (id) => {\n    return dispatch => {\n        dispatch(fetchUsers());\n        axios.delete(`/user/${id}`).then(() => {\n            dispatch(fillUsers());\n        }).catch(error => {\n            if (error.response) {\n                let {message} = error.response.data;\n                if (message)\n                    dispatch(fetchUsersError(message));\n            } else {\n                dispatch(fetchUsersError(\"Please report admin!\"));\n            }\n        });\n    };\n};\n\nexport const deleteUserBranch = (userID, branchID) => {\n    return dispatch => {\n        dispatch(fetchUsers());\n        axios.delete(`/user/${userID}/${branchID}`).then(() => {\n            dispatch(fillUsers());\n        }).catch(error => {\n            if (error.response) {\n                let {message} = error.response.data;\n                if (message)\n                    dispatch(fetchUsersError(message));\n            } else {\n                dispatch(fetchUsersError(\"Please report admin!\"));\n            }\n        });\n    };\n};","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchAllDailySalesInDate} from \"../../redux/actions/dailySaleAdminActions\";\nimport {Alert} from \"reactstrap\";\nimport CenteredSpinner from \"../spinner/CenteredSpinner\";\nimport {fillUsers} from \"../../redux/actions/usersActions\";\n\nconst DailySalesInDay = (props) => {\n    const dispatch = useDispatch();\n    const dailySaleState = useSelector(state => state.dailySaleAdmin);\n    const usersState = useSelector(state => state.users);\n    const [missingUsers, setMissingUsers] = useState([]);\n\n    useEffect(() => {\n        dispatch(fillUsers());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(fetchAllDailySalesInDate(props.date));\n    }, [props.date]);\n\n    useEffect(() => {\n        if (dailySaleState.dailySales.length > 0 && usersState.users.length > 0) {\n            let dsIDs = dailySaleState.dailySales.map(ds => {\n                return ds.userID\n            });\n\n            setMissingUsers(\n                usersState.users.filter(u => dsIDs.indexOf(u._id) === -1)\n            );\n        } else {\n            setMissingUsers([]);\n        }\n    }, [dailySaleState.dailySales, usersState.users])\n\n    const [total, setTotal] = useState(0)\n    useEffect(() => {\n        let tot = 0;\n\n        dailySaleState.dailySales.forEach((dailySale) => {\n            dailySale.salesByBranches.forEach(branchSale => {\n                tot += branchSale.totalSale;\n            })\n        });\n\n        setTotal(tot);\n    }, [dailySaleState.dailySales])\n\n    return <>\n        {dailySaleState.error && <Alert color=\"danger\" className=\"mt-2\"> {dailySaleState.error} </Alert>}\n        {usersState.error && <Alert color=\"danger\" className=\"mt-2\"> {usersState.error} </Alert>}\n        {dailySaleState.loading || usersState.loading ? <CenteredSpinner/> : <>\n\n            <table className=\"table table-bordered\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">Bölge</th>\n                    <th scope=\"col\">Şube No</th>\n                    <th scope=\"col\">Şube Adı</th>\n                    <th scope=\"col\">Toplam</th>\n                </tr>\n                </thead>\n                <tbody>\n                {dailySaleState.dailySales.map((dailySale) => {\n                    return dailySale.salesByBranches.map(branchSale => {\n                        return <tr key={branchSale._id}>\n                            <td className=\"text-center\">{dailySale.regionName}</td>\n                            <td className=\"text-center\">{branchSale.branchNo}</td>\n                            <td className=\"text-center\">{branchSale.branchName}</td>\n                            <td className=\"text-center\">{branchSale.totalSale}</td>\n                        </tr>\n                    })\n                })}\n                {missingUsers.map((mu) => {\n                    return mu.branches.map(br => {\n                        return <tr key={br._id} className=\"bg-dark text-white\">\n                            <td className=\"text-center\"> {mu.regionName} </td>\n                            <td className=\"text-center\"> {br.branchNo} </td>\n                            <td className=\"text-center\"> {br.branchName} </td>\n                            <td className=\"text-center\"> 0</td>\n                        </tr>\n                    })\n                })}\n                <tr className=\"bg-primary text-white\">\n                    <td colSpan=\"3\" className=\"text-center\">Toplam</td>\n                    <td className=\"text-center\">{total} TL</td>\n                </tr>\n                </tbody>\n            </table>\n        </>}\n    </>\n};\n\nexport default DailySalesInDay;","import {FETCH_ALL_DAILY_SALE_FULFILLED, FETCH_ALL_DAILY_SALE_PENDING, FETCH_ALL_DAILY_SALE_REJECT} from \"./types\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n\nexport const fetchAllDailySalesInDate = (date) => {\n    return dispatch => {\n        dispatch({type: FETCH_ALL_DAILY_SALE_PENDING});\n        axios.get(`/dailySale/all/${moment(date).format(\"yyyy-MM-DD\")}`).then(res => {\n            dispatch({type: FETCH_ALL_DAILY_SALE_FULFILLED, payload: res.data});\n        }).catch(error => {\n            if (error.response) {\n                let {message} = error.response.data;\n                if (message)\n                    dispatch({type: FETCH_ALL_DAILY_SALE_REJECT, payload: message});\n            } else {\n                dispatch({type: FETCH_ALL_DAILY_SALE_REJECT, payload: \"Please report admin!\"});\n            }\n        });\n\n    };\n}","import React, {useState} from 'react';\nimport PanelHeader from \"../../panelHeader/PanelHeader\";\nimport Datepicker from 'react-datepicker';\nimport DailySalesInDay from \"../dailySalesInDay\";\n\nconst ControlPanelMain = () => {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const datepicker = <Datepicker className=\"mr-5\" selected={selectedDate} onChange={date => setSelectedDate(date)}\n                                   dateFormat=\"dd/MM/yyyy\"/>;\n\n    return <>\n        <PanelHeader head=\"Günlük Rapor\" child={datepicker}/>\n        <DailySalesInDay date={selectedDate}/>\n\n    </>\n};\n\nexport default ControlPanelMain;","import React, {useState} from 'react';\nimport {registerUser} from \"../../../redux/actions/usersActions\";\n\nconst AddUserComponent = (props) => {\n\n    const [formState, setFormState] = useState({});\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const {nameSurname, regionName, username, password} = formState;\n        if (nameSurname && regionName && username && password) {\n            props.dispatch(registerUser({nameSurname, regionName, username, password}));\n        }\n    };\n\n    const handleChange = (e) => {\n        const target = e.target;\n        setFormState((oldState) => {\n            return {...oldState, [target.name]: target.value}\n        });\n\n    }\n\n    return <>\n        <form className=\"form-inline mb-5\" onSubmit={handleSubmit}>\n            <div className=\"form-group m-sm-1\">\n                <input type=\"text\" name=\"nameSurname\" id=\"exampleEmail\" placeholder=\"İsim Soyisim\"\n                       className=\"form-control\"\n                       onChange={handleChange} required/>\n            </div>\n            <div className=\"form-group m-sm-1\">\n                <input type=\"text\" name=\"regionName\" id=\"exampleEmail\" placeholder=\"Bölge Adı\"\n                       className=\"form-control\"\n                       onChange={handleChange} required/>\n            </div>\n            <div className=\"form-group m-sm-1\">\n                <input type=\"text\" name=\"username\" id=\"exampleEmail\" placeholder=\"Kullanıcı Adı\"\n                       className=\"form-control\"\n                       onChange={handleChange} required/>\n            </div>\n            <div className=\"form-group m-sm-1\">\n                <input type=\"text\" name=\"password\" id=\"examplePassword\" placeholder=\"Şifre\"\n                       className=\"form-control\"\n                       onChange={handleChange} required/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary m-sm-1\">Ekle</button>\n        </form>\n    </>\n};\n\nexport default AddUserComponent;","import React, {useState} from 'react';\nimport {updateUserBranches} from \"../../../redux/actions/usersActions\";\n\n\nconst AddBranchComponent = (props) => {\n\n    const [branchNo, setBranchNo] = useState(null);\n    const [branchName, setBranchName] = useState(null);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (branchNo && branchName) {\n            props.dispatch(updateUserBranches(props.user._id, [{branchNo, branchName}]));\n        }\n    }\n\n\n    return <>\n        <form onSubmit={handleSubmit}>\n            <div className=\"input-group mb-3\">\n                <input type=\"number\" className=\"form-control\" name=\"branchName\"\n                       placeholder=\"Şube No\"\n                       onChange={(event) => setBranchNo(event.target.value)}/>\n                <input type=\"text\" className=\"form-control\" name=\"branchName\"\n                       placeholder=\"Şube Adı\"\n                       onChange={(event) => setBranchName(event.target.value)}/>\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-primary\" id=\"btn-add\">Ekle</button>\n                </div>\n            </div>\n        </form>\n    </>\n};\n\nexport default AddBranchComponent;","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport NavbarComponent from \"../navbarComponent/NavbarComponent\";\nimport SidebarComponent from \"../sidebarComponent/SidebarComponent\";\nimport {Route, Switch, useRouteMatch} from \"react-router-dom\";\nimport ControlPanelMain from \"./controlPanelMain/ControlPanelMain\";\nimport UsersComponent from \"./usersComponent/UsersComponent\";\n\n\nconst pages = [\n    {\n        exact: true,\n        path: \"/\",\n        component: ControlPanelMain,\n        text:\"Ana Sayfa\"\n    },\n    {\n        exact: false,\n        path: \"/users\",\n        component: UsersComponent,\n        text:\"Kullanıcılar\"\n    },\n];\n\nconst ControlPanel = (props) => {\n    const {user} = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n    const { path } = useRouteMatch();\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return <>\n        <NavbarComponent history={props.history} dispatch={dispatch} toggle={toggle} user={user}/>\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <SidebarComponent isOpen={isOpen} pages={pages} path={path}/>\n\n                <main role=\"main\" className=\"col-md-10 ml-sm-auto col-lg-10 px-md-4\">\n                    <Switch>\n                        {pages.map((p, index) => {\n                            return <Route key={index} exact={p.exact} path={path+p.path} component={p.component}/>\n                        })}\n\n                    </Switch>\n                </main>\n            </div>\n        </div>\n    </>\n};\n\nexport default ControlPanel;","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Alert, Button} from \"reactstrap\";\nimport CenteredSpinner from \"../../spinner/CenteredSpinner\";\nimport {fillUsers, deleteUserBranch, deleteUser} from \"../../../redux/actions/usersActions\";\nimport AddUserComponent from \"./AddUserComponent\";\nimport AddBranchComponent from \"./AddBranchComponent\";\nimport PanelHeader from \"../../panelHeader/PanelHeader\";\n\nconst UsersComponent = () => {\n    const {loading, error, users} = useSelector(state => state.users);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fillUsers());\n\n    }, [dispatch]);\n\n    const deleteBranchAction = (userId, branchId) => {\n        dispatch(deleteUserBranch(userId, branchId));\n    };\n\n    const deleteUserAction = (id) => {\n        dispatch(deleteUser(id));\n    }\n\n    return <>\n        {error && <Alert color=\"danger\" className=\"mt-2\"> {error} </Alert>}\n        <PanelHeader head=\"Kullanıcılar\" />\n\n        {loading ? <CenteredSpinner/> : <>\n            <AddUserComponent dispatch={dispatch}/>\n\n            <table className=\"table table-bordered\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">İsim Soyisim</th>\n                    <th scope=\"col\">Bölge</th>\n                    <th scope=\"col\">Kullanıcı Adı</th>\n                    <th scope=\"col\">Şifre</th>\n                    <th scope=\"col\">Şubeler</th>\n                    <th scope=\"col\"/>\n                </tr>\n                </thead>\n                <tbody>\n                {users.map(user => {\n                    return <tr key={user._id}>\n                        <td className=\"align-middle\">{user.nameSurname}</td>\n                        <td className=\"align-middle\">{user.regionName}</td>\n                        <td className=\"align-middle\">{user.username}</td>\n                        <td className=\"align-middle\">{user.password}</td>\n                        <td>\n                            <table className=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                    <th scope=\"col\">No</th>\n                                    <th scope=\"col\">Adı</th>\n                                    <th scope=\"col\"/>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr>\n                                    <td colSpan=\"3\"><AddBranchComponent user={user} dispatch={dispatch}/></td>\n                                </tr>\n                                {user.branches.map(branch => {\n                                    return <tr key={branch._id}>\n                                        <td>{branch.branchNo}</td>\n                                        <td>{branch.branchName}</td>\n                                        <td width=\"20%\" className=\"text-center\"><Button color=\"danger\"\n                                                    onClick={()=>deleteBranchAction(user._id, branch._id)}>Sil</Button></td>\n                                    </tr>\n                                })}\n                                </tbody>\n                            </table>\n                        </td>\n                        <td className=\"align-middle text-center\">\n                            <Button color=\"danger\" onClick={()=> deleteUserAction(user._id)}>Sil</Button>\n                        </td>\n                    </tr>\n                })}\n                </tbody>\n            </table>\n\n\n        </>\n        }\n    </>\n};\n\nexport default UsersComponent;","import React, {useEffect} from 'react';\nimport './App.css';\nimport LoginForm from \"./components/loginForm/LoginForm\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport UserPanel from \"./components/userPanel/UserPanel\";\nimport ControlPanel from \"./components/controlPanel/ControlPanel\";\nimport {setAuthorizationToken} from \"./helpers/setAuthorizationToken\";\nimport {useSelector} from \"react-redux\";\nimport ErrorPage from \"./components/errorPage/ErrorPage\";\n\nconst pages = [\n    {\n        exact: true,\n        path: \"/\",\n        component: LoginForm,\n        isPublic: true,\n        usertype: 99\n    },\n    //admin pages\n    {\n        exact: false,\n        path: \"/controlPanel\",\n        component: ControlPanel,\n        isPublic: false,\n        usertype: 0\n    },\n    //user pages\n    {\n        exact: false,\n        path: \"/userPanel\",\n        component: UserPanel,\n        isPublic: false,\n        usertype: 1\n    },\n    {\n        exact: false,\n        path: \"*\",\n        component: ErrorPage,\n        isPublic: true,\n        usertype: 99\n    },\n];\n\nconst App = () => {\n    const {user, token} = useSelector(state => state.auth);\n\n    useEffect(() => {\n        if (token) {\n            setAuthorizationToken(token);\n        }\n    }, [token])\n    return <>\n        <Router>\n            <Switch>\n                {\n                    pages.map((p, index) => {\n                        if(p.isPublic || (user && user.usertype === p.usertype)){\n                            return <Route key={index} exact={p.exact} path={p.path} component={p.component}/>;\n                        }else{\n                            return '';\n                        }\n                    })\n                }\n            </Switch>\n        </Router>\n    </>\n\n}\n\nexport default App;\n","import React from 'react';\n\nconst ErrorPage = () => {\n    return <>\n        <h1 className=\"text-center\">404 Not found! </h1>\n    </>\n};\n\nexport default ErrorPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {LOGIN_ERROR, LOGIN_SUCCESS, LOGOUT} from \"../actions/types\";\n\nconst initState = {\n    user: {},\n    token: undefined,\n    error: false,\n    errorMessage: '',\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case LOGIN_SUCCESS:{\n            return {\n                ...state,\n                user: action.user,\n                token: action.token,\n                error: false,\n                errorMessage: ''\n            };\n        }\n\n        case LOGIN_ERROR:{\n            return {\n                ...state,\n                user: {},\n                token: undefined,\n                error: true,\n                errorMessage: action.error\n            };\n        }\n\n        case LOGOUT:{\n            return {\n                ...state,\n                user: {},\n                token: undefined,\n                error: false,\n                errorMessage: ''\n            };\n        }\n        default:{\n            return state;\n        }\n\n    }\n}\n\nexport default authReducer;","import {\n    FETCH_USERS_FULFILLED,\n    FETCH_USERS_PENDING,\n    FETCH_USERS_REJECT,\n    PUT_USER_FULFILLED,\n    PUT_USER_PENDING,\n    PUT_USER_REJECT\n} from \"../actions/types\";\n\nconst initialState = {\n    users: [],\n    loading: false,\n    error: undefined,\n    updateLoading: \"\",\n    updateError: {},\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_USERS_PENDING: {\n            return {\n                ...state,\n                loading: true,\n                error: undefined\n            }\n        }\n        case FETCH_USERS_FULFILLED: {\n            return {\n                ...state,\n                loading: false,\n                error: undefined,\n                updateLoading: \"\",\n                updateError: {},\n                users: action.payload\n            }\n        }\n        case FETCH_USERS_REJECT: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        }\n        case PUT_USER_PENDING: {\n            return {\n                ...state,\n                updateLoading: action.payload,\n                updateError: {}\n            }\n        }\n        case PUT_USER_FULFILLED: {\n            /*let putUser = action.payload;\n            let users = state.users;\n            let index = state.users.findIndex(user => user._id === putUser._id)\n            if (index !== -1)\n                users = state.users[index] = putUser;*/\n\n            return {\n                ...state,\n                updateLoading: \"\",\n                updateError: {},\n                users: action.payload\n            }\n        }\n        case PUT_USER_REJECT: {\n            return {\n                ...state,\n                updateLoading: \"\",\n                error: action.payload\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default usersReducer;","import {\n    CHANGE_DAILY_SALE_BRANCH_DATA,\n    FETCH_DAILY_SALE_FULFILLED,\n    FETCH_DAILY_SALE_PENDING,\n    FETCH_DAILY_SALE_REJECT, PUT_DAILY_SALE_FULFILLED, PUT_DAILY_SALE_REJECT\n} from \"../actions/types\";\n\nconst dailySaleReducer = (state= {}, action) => {\n    switch (action.type){\n        case FETCH_DAILY_SALE_PENDING:{\n            return {\n                ...state,\n                loading: true,\n                okMessage: undefined,\n                error: undefined\n            }\n        }\n        case FETCH_DAILY_SALE_FULFILLED: {\n            return {\n                ...state,\n                loading: false,\n                error: undefined,\n                dailySale: action.payload\n            }\n        }\n        case FETCH_DAILY_SALE_REJECT: {\n            return {\n                ...state,\n                loading: false,\n                okMessage: undefined,\n                error: action.payload,\n                dailySale:{}\n            }\n        }\n        case CHANGE_DAILY_SALE_BRANCH_DATA: {\n            let dailySale = state.dailySale;\n            let current = dailySale.salesByBranches[action.payload.index];\n            current = {...current, [action.payload.propName]:action.payload.value};\n            dailySale.salesByBranches[action.payload.index] = current;\n\n            return {\n                ...state,\n                loading: false,\n                error: undefined,\n                okMessage: undefined,\n                dailySale: dailySale\n            }\n        }\n        case PUT_DAILY_SALE_FULFILLED: {\n            return {\n                ...state,\n                loading: false,\n                okMessage: action.payload,\n                error: undefined,\n            }\n        }\n        case PUT_DAILY_SALE_REJECT: {\n            return {\n                ...state,\n                loading: false,\n                okMessage: undefined,\n                error: action.payload\n            }\n        }\n        default: {\n            return state;\n        }\n    };\n};\n\nexport default dailySaleReducer;","import {\n    FETCH_ALL_DAILY_SALE_FULFILLED,\n    FETCH_ALL_DAILY_SALE_PENDING,\n    FETCH_ALL_DAILY_SALE_REJECT\n} from \"../actions/types\";\n\nconst initialState = {\n    loading: false,\n    error: undefined,\n    dailySales: []\n}\n\nconst dailySaleAdminReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_ALL_DAILY_SALE_PENDING: {\n            return {\n                ...state,\n                loading: true,\n                error: undefined\n            }\n        }\n        case FETCH_ALL_DAILY_SALE_FULFILLED: {\n            return {\n                ...state,\n                loading: false,\n                error: undefined,\n                dailySales:action.payload\n            }\n        }\n        case FETCH_ALL_DAILY_SALE_REJECT: {\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        }\n        default: {\n            return state;\n        }\n\n    }\n};\n\nexport default dailySaleAdminReducer;","import { combineReducers } from 'redux';\n\nimport authReducer from './authReducer';\nimport usersReducer from './usersReducer';\nimport dailySaleReducer from \"./dailySaleReducer\";\nimport {LOGOUT} from \"../actions/types\";\nimport dailySaleAdminReducer from \"./dailySaleAdminReducer\";\n\nconst rootReducer = (state, action) => {\n    if (action.type === LOGOUT){\n        state = undefined;\n    }\n\n    return combineReducers({\n        auth: authReducer,\n        users: usersReducer,\n        dailySale:dailySaleReducer,\n        dailySaleAdmin:dailySaleAdminReducer\n    })(state ,action);\n};\n\nexport default rootReducer;","import {applyMiddleware, createStore} from \"redux\";\nimport thunkMiddleware from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport rootReducer from './reducers/rootReducer';\nimport {loadState} from \"../helpers/localStorage\";\nimport throttle from \"lodash/throttle\";\nimport jwtDecode from \"jwt-decode\";\nimport {setAuthorizationToken} from \"../helpers/setAuthorizationToken\";\n\nimport {createLogger} from \"redux-logger\";\nconst loggerMiddleware = createLogger();\n\nconst persistedState = loadState();\nif (persistedState && persistedState.token) {\n    setAuthorizationToken(persistedState.token);\n    persistedState.auth = {\n        user: jwtDecode(persistedState.token),\n        token: persistedState.token,\n        error: false,\n        errorMessage: ''\n    }\n    delete persistedState.token;\n}\nconst store = createStore(rootReducer, persistedState, composeWithDevTools(applyMiddleware(thunkMiddleware, loggerMiddleware)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//redux\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\n\n//css\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//axios defauls\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:5000/api';\naxios.defaults.headers.post['Content-Type'] = 'application/json; charset=utf-8'\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"LoginForm_cont__AP2YZ\",\"form_sign_in\":\"LoginForm_form_sign_in__1WqbJ\"};"],"sourceRoot":""}